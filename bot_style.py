import requests

from setting import *
from file_img import *
# from model_cnn import *
# from setting import TG_TOKEN

import os
import telebot
from telebot import types
from datetime import datetime
from telebot import TeleBot
import time

from PIL import Image


# import json
# import random

# # === –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ë–î Replit, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã 24/7
# import os
# from background import keep_alive  # #–∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
#
# from replit import db
# import base
#
# import pip
# pip.main(['install', 'pytelegrambotapi'])
#

# my_secret = os.environ['token']
# -----------------------------

bot = telebot.TeleBot(TG_TOKEN, skip_pending=True)

# --- –ú–∞—Ä–∫–µ—Ä—ã —Å–æ–±—ã—Ç–∏–π
style_marker = {}  # –º–∞—Ä–∫–µ—Ä —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
show_marker = {}   # –º–∞—Ä–∫–µ—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∏–ª—è
image_marker = {} # –º–∞—Ä–∫–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

# --- —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è Style
dic_style = {}  # –Ω–∞–∑–≤–∞–Ω–∏–µ (–Ω–æ–º–µ—Ä) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç–∏–ª—è dic_style[user_id]
dic_img = {}   # –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –∏–º—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä
# ---------------

# = = = –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–π
# --- –≤—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏
HELP = """
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!‚úåÔ∏è 
–Ø –ß–∞—Ç-–ë–æ—Ç! –ü–æ–º–æ–≥—É –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥ –æ–¥–∏–Ω –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å—Ç–∏–ª–µ–π.
–ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏ —Å–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!
–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ:
¬©Ô∏è
"""
#  ---- –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥
TEAM = """‚úèÔ∏è –ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:
/menu - (Menu, –ú–µ–Ω—é) - –ú–µ–Ω—é - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
/help - (–ùelp, –°–ø—Ä–∞–≤–∫–∞, ? ) - –≤—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.
/info - (Info, –û–ø–∏—Å–∞–Ω–∏–µ) - –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
/sample - (Sample, –ü—Ä–∏–º–µ—Ä) - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è.
/style - (Style, –°—Ç–∏–ª—å) - –≤—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è.
/end - (End, –û—Ç–º–µ–Ω–∞, /) - –æ—Ç–º–µ–Ω–∞, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.
"""

# ---- –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–æ–∫
Info = """
üñºÔ∏è –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏ —Å–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —è –ø–æ–º–æ–≥—É –µ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –ø–æ–¥ –æ–¥–∏–Ω –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å—Ç–∏–ª–µ–π.

‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: 
1. –ú–µ–Ω—é - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
2. –°–ø—Ä–∞–≤–∫–∞ - –≤—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.
3. –û–ø–∏—Å–∞–Ω–∏–µ - –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
4. –ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è.
5. –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.
6. –ó–∞–≤–µ—Ä—à–∏—Ç—å - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
"""


#  = = = –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# ----- –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
# def cancel_id(user_id):
#     # add_marker[user_id] = 0
#     # tag_marker[user_id] = 0
#     # edit_marker[user_id] = 0
#     # union_marker[user_id] = 0
#     # share_marker[user_id] = 0
#     # back_marker[user_id] = 0
#     # sms_marker[user_id] = 0
#     # share_but[user_id] = 0
#     # friendly_but[user_id] = 0
#     # alien_but[user_id] = 0
#     # y_but[user_id] = 0
#     # n_but[user_id] = 0
#     # up_but[user_id] = 0
#     # drop_id_marker[user_id] = 0
#     # serv_marker[user_id] = 0
#     _text = f'‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.'
#     return _text

# ----- –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ª–æ–≤–∞—Ä–µ–π - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
def normalization(user_id):

    if dic_img.get(user_id) is not None:
        # —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        os.remove( dic_img[user_id] [0])
        del dic_img[user_id]
    if dic_style.get(user_id) is not None:
        del dic_style[user_id]

    style_marker[user_id] = 0
    show_marker[user_id] = 0

# ------------------------------------------------------------
# = = = –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
# -----  –°–ø—Ä–∞–≤–∫–∞
@bot.message_handler(
    commands=["–°–ø—Ä–∞–≤–∫–∞", "–°–ü–†–ê–í–ö–ê", "—Å–ø—Ä–∞–≤–∫–∞", "help", "Help", "HELP", "hElp", "heLp", "helP", "HElp", "HElP", "HELp",
              "hELp", "hELP", "heLp", "heLP", "?", "start"])
def help(message):
    user_id = str(message.from_user.id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –æ–±–Ω—É–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã
    style_marker[user_id] = 0
    show_marker[user_id] = 0

    buttons = [
        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
        types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
        types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, HELP, reply_markup=keyboard)

# ----- –ú–µ–Ω—é
@bot.message_handler(commands=["menu", "MENU", "Menu", "–º–µ–Ω—é", "–ú–µ–Ω—é", "–ú–ï–ù–Æ", "–º–ï–ù–Æ", "–º–µ–ù–Æ", "–º–µ–Ω–Æ"])
def menu(message):
    user_id = str(message.from_user.id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –æ–±–Ω—É–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã
    style_marker[user_id] = 0
    show_marker[user_id] = 0

    buttons = [
        types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='help'),
        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
        types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
        types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, TEAM, reply_markup=keyboard)

# ----- –ò–Ω—Ñ–æ - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(commands=["info", "INFO", "Info", "iNfo", "–û–ø–∏—Å–∞–Ω–∏–µ", "–æ–ø–∏—Å–∞–Ω–∏–µ", "–û–ü–ò–°–ê–ù–ò–ï"])
def info(message):
    user_id = str(message.from_user.id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –æ–±–Ω—É–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã
    style_marker[user_id] = 0
    show_marker[user_id] = 0

    buttons = [
        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
        types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='help'),
        types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
        types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, Info, reply_markup=keyboard)

#  ----- –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞
@bot.message_handler(commands=["style", "STYLE", "Style", "–°—Ç–∏–ª—å", "—Å—Ç–∏–ª—å", "–°–¢–ò–õ–¨"])
def style_img(message):
    user_id = str(message.from_user.id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    style_marker[user_id] = 1
    show_marker[user_id] = 0

    buttons = [
        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
        types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞:\n{text_style}', reply_markup=keyboard)

# ----- –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ /end
@bot.message_handler(commands=["–û—Ç–º–µ–Ω–∞", "–û–¢–ú–ï–ù–ê", "–æ—Ç–º–µ–Ω–∞", "end", "END", "End", "/"])
def end(message):
    user_id = str(message.from_user.id)

    #  –æ–±–Ω—É–ª—è–µ–º —Å–ª–æ–≤–∞—Ä–∏ –∏ –º–∞—Ä–∫–µ—Ä—ã
    normalization(user_id)

    buttons = [
        types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='help'),
        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
        types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
        types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, "‚õî –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=keyboard)

# -----–ü–æ–∫–∞–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è
@bot.message_handler(commands=["sample", "SAMPLE", "Sample", "–ø—Ä–∏–º–µ—Ä", "–ü—Ä–∏–º–µ—Ä", "–ü–†–ò–ú–ï–†"])
def show(message):
    user_id = str(message.from_user.id)

    show_marker[user_id]  = 1
    style_marker[user_id] = 0

    buttons = [
        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
        types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —è –ø–æ–∫–∞–∂—É –ø—Ä–∏–º–µ—Ä:\n {text_style}',
                     reply_markup=keyboard)

# ----- –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
# @bot.message_handler(content_types=['photo'])
@bot.message_handler(content_types=['document', 'audio', 'video', 'photo'])
def photo(message):
    user_id = str(message.from_user.id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    style_marker[user_id] = 0
    show_marker[user_id] = 0

    fileID = message.document.file_id if message.content_type == 'document' else \
         message.audio.file_id if message.content_type == 'audio' else \
             message.video.file_id if message.content_type == 'video' else \
                 message.photo[-1].file_id if message.content_type == 'photo' else None
    file_info = bot.get_file(fileID)
    file_extension = os.path.splitext(file_info.file_path)[-1].lower()

    # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
    if file_extension in ['.jpg', '.jpeg', '.png']:

        downloaded_file = bot.download_file(file_info.file_path)
        img_photo = message.photo[len(message.photo) - 1].file_id

        # path = bot.get_file(fileID)
        # extn = '.' + str(path.file_path).split('.')[-1]
        # print(extn)
        # print(path)
        # chat_id = message.chat.id
        # url = r'https://api.telegram.org/bot'
        #     # r'https://api.telegram.org'
        # fl = requests.get(f'{url}{TG_TOKEN}/sendPhoto?chat_id={chat_id}&photo={img_photo}').text
        # print(  img_photo )
        # ph = Image.open(f'{url}{TG_TOKEN}/sendPhoto?chat_id={chat_id}&photo={img_photo}')
        # nm = f'{url}{TG_TOKEN}/sendPhoto?chat_id={chat_id}&photo={img_photo}'
        # print(f'{url}{TG_TOKEN}/sendPhoto?chat_id={chat_id}&photo={img_photo}')
        # print( downloaded_file)
        # ph = Image.open( nm)
        # print( ph)
        # print('---------------------------')
        # bot.send_photo(message.chat.id, fl, caption='–í–∞—à —Ç–µ–∫—Å—Ç')

        # bot.send_message(message.chat.id, f' –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:\n {fl}')
        # print('---------------------------')
        #  –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        text = f'temp_image/img_{user_id}.jpg'

        with open( text , 'wb' ) as new_file:
            new_img = new_file.write(downloaded_file)

        # —Ä–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        in_img_size = img_size(text)
        #  –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –∏—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ —Å–ª–æ–≤–∞—Ä—å
        dic_img[user_id] = [text, in_img_size ]

        # print( dic_img[user_id] )

        #  –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è
        if dic_style.get(user_id) is not None:

           bot.send_message(message.chat.id, f'[ ‚ñ†_‚ñ†_‚ñ°_‚ñ°_‚ñ° ] ...–≤—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è...\n'
                                             f'‚è∞... —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...')
           # #  –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
           # in_size = dic_img[user_id][1]
           # #  –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è
           # img_style =dic_style[user_id][1]
           # # –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç
           # img_content = image_loader (text)
           # #  –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–∏
           # img_input = img_content.clone()
           # # –∑–∞–ø—É—Å–∫ –º–æ–¥–µ–ª–∏ CNN
           # output_model, score_style, score_content = run_style_transfer(model_vgg, cnn_normalization_mean,
           #                                                         cnn_normalization_std, img_content,
           #                                                         img_style, img_input,
           #                                                         num_steps=N_Step,
           #                                                         style_weight=1000000,
           #                                                         content_weight=1)
           #
           # # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∏—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä
           # img_resize = resize_loader(output_model, in_size)
           # print( dic_img[user_id], dic_style[user_id] )

           output_img = style_apply( dic_img[user_id], dic_style[user_id] )

           buttons = [
               types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
               types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
               types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å', callback_data='new_style'),
               types.InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image')
           ]
           keyboard = types.InlineKeyboardMarkup(row_width=2)
           keyboard.add(*buttons)

           bot.send_photo(message.chat.id, output_img)
           bot.send_message(message.chat.id, f'‚ú® –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', reply_markup=keyboard )
           # bot.send_photo(message.chat.id, img_resize, caption='–ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', reply_markup=keyboard )
        else:
            # –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç–∏–ª—è
            style_marker[user_id] = 1
            show_marker[user_id] = 0
            image_marker [user_id] = 1

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            bot.send_message(message.chat.id, f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞:\n{text_style}',
                             reply_markup=keyboard)

    else:
        buttons = [
            types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
            types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
            types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
        ]
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, f'‚ö†Ô∏è –ù–µ—É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∞–π–ª.\n'
                                          f'–ü—Ä–∏—à–ª–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–∞—Ä–º–∞—Ç–µ "jp–µg" –∏–ª–∏ "png" ',
                         reply_markup=keyboard)

# ---------------------------------------------
# = = = –†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ = = =
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):

    user_id = str(call.from_user.id)
    # message_id = call.message.message_id
    # chat_id = call.message.chat.id
    # print(user_id)

    if call.message:
        # ----- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–æ–≤–æ–µ –∏–∑–æ–±–∞–∂–µ–Ω–∏–µ
        if call.data == "new_image":

            show_marker[user_id]  = 0
            style_marker[user_id] = 0

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)

            bot.send_message(call.message.chat.id, f'üì• –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è',
                             reply_markup=keyboard)

        #  –í—ã–±–æ—Ä —Å—Ç–∏–ª—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        elif call.data == "new_style":

            style_marker[user_id] = 1
            show_marker[user_id]  = 0

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            bot.send_message(call.message.chat.id, f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞:\n {text_style}',
                             reply_markup=keyboard)

        #  –ü–æ–∫–∞–∑ –ø—Ä–∏–º–µ—Ä–∞ —Å—Ç–∏–ª—è
        elif call.data == "show_style":

            style_marker[user_id] = 0
            show_marker[user_id] = 1

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            bot.send_message(call.message.chat.id, f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —è –ø–æ–∫–∞–∂—É –ø—Ä–∏–º–µ—Ä:\n {text_style}',
                             reply_markup=keyboard)

        # ----- –ö–Ω–æ–ø–∫–∞ –°–ø—Ä–∞–≤–∫–∞
        elif call.data == "help":

            style_marker[user_id] = 0
            show_marker[user_id]  = 0

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
                types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=HELP, reply_markup=keyboard)

           # -----–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∞" - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
        elif call.data == "cancel":

            #  –æ–±–Ω—É–ª—è–µ–º —Å–ª–æ–≤–∞—Ä–∏ –∏ –º–∞—Ä–∫–µ—Ä—ã
            normalization(user_id)

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
                types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            bot.send_message(call.message.chat.id, "‚õî –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=keyboard)

        # ----- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞ "–ú–µ–Ω—é"
        elif call.data == 'menu':

            style_marker[user_id] = 0
            show_marker[user_id] = 0

            buttons = [
                types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='help'),
                types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
                types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥)
            keyboard.add(*buttons)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=TEAM,
                                  reply_markup=keyboard)
            # bot.send_message(call.message.chat.id, TEAM,  reply_markup=keyboard)

        # ----- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞ "Info" –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        elif call.data == 'info':

            #  –æ–±–Ω—É–ª—è–µ–º —Å–ª–æ–≤–∞—Ä–∏ –∏ –º–∞—Ä–∫–µ—Ä—ã
            style_marker[user_id] = 0
            show_marker[user_id] = 0

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='help'),
                types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥)
            keyboard.add(*buttons)

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=Info, reply_markup=keyboard)

        # ----- –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å, –∫ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        elif call.data == 'apply':

            style_marker[user_id] = 0
            show_marker[user_id] = 0

            # print(user_id, dic_img[user_id], dic_style[user_id])

            bot.send_message(call.message.chat.id, f'[ ‚ñ†_‚ñ†_‚ñ°_‚ñ°_‚ñ° ] ...–≤—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è...\n'
                                              f'‚è∞... —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 1 –º–∏–Ω.')
            output_img = style_apply(dic_img[user_id], dic_style[user_id] )

            buttons = [
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å', callback_data='new_style'),
                types.InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)

            bot.send_photo(call.message.chat.id, output_img)
            bot.send_message(call.message.chat.id, f'‚ú® –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', reply_markup=keyboard)


        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω–æ–≥–æ callback-–∑–∞–ø—Ä–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        bot.answer_callback_query(callback_query_id=call.id)
# -----------------------------------------------------------------------------
# = = = –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
@bot.message_handler(content_types=["text"])
def echo(message):

    user_id = str(message.from_user.id)
    # user_name = str(message.from_user.username)  # Log –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # time_sms = message.date

    word = message.text.capitalize().replace(".", ",")
    if word == "/":
        pass
    else:
        iskl = ":;!_*-+()\/#%&~'^$`{}[]<>|\"[[]]"  # –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª—ã
        for n in iskl:
            if n in message.text:
                word = word.capitalize().replace(n, " ")
            else:
                pass

    # ---–°—Ü–µ–Ω–∞—Ä–∏–π - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    if word == "/":

        #  –æ–±–Ω—É–ª—è–µ–º —Å–ª–æ–≤–∞—Ä–∏ –∏ –º–∞—Ä–∫–µ—Ä—ã
        normalization(user_id)

        buttons = [
            types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
            types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
            types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
            types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style')
        ]
        keyboard = types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥)
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, "‚õî –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=keyboard)

    # --- –°—Ü–µ–Ω–∞—Ä–∏–π -  –ø–æ–∫–∞–∑ –ø—Ä–∏–º–µ—Ä–∞ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    elif show_marker[user_id] == 1:

        style_marker[user_id] = 0

        Nomer = message.text
        if Nomer.isnumeric() == True:  # –ø—Ä–æ–≤–∫—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
            Nomer = int(message.text)

            buttons = [
                types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style'),
                types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)

            if Nomer <= len(list_style) and Nomer > 0:

                show_marker[user_id] = 0
                #  –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                name_style = list_style[Nomer][0]
                dic_style[user_id] = [name_style, random_image(name_style) ]
                #  –≤—ã–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–ª—è
                img_sample = img_show( random_image (name_style) )

                text = f'‚úîÔ∏è - –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {list_style[Nomer][1]}'
                bot.send_photo(message.chat.id, img_sample )
                bot.send_message(message.chat.id, f'{text}', reply_markup=keyboard)

            else:
                bot.send_message(message.chat.id, f'üö´ {Nomer} - —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≤ c–ø–∏—Å–∫–µ –Ω–µ—Ç'
                                                  f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è:\n {text_style}',
                                 reply_markup=keyboard)
        else:
            text_3 = f'‚ÄºÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞.'
            bot.send_message(message.chat.id, f'{text_3}\n {text_style}', reply_markup=keyboard)

    # --- –°—Ü–µ–Ω–∞—Ä–∏–π -  –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è
    elif style_marker[user_id] == 1:

        # style_marker[user_id] = 0
        show_marker[user_id] = 0

        Nomer = message.text
        if Nomer.isnumeric() == True:  # –ø—Ä–æ–≤–∫—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
            Nomer = int(message.text)

            if Nomer <= len(list_style) and Nomer > 0:

                style_marker[user_id] = 0
                #  –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                name_style = list_style[Nomer][0]
                dic_style[user_id] = [name_style, random_image(name_style)]

                buttons = [
                    types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style'),
                    types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                    types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                    types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
                ]
                keyboard = types.InlineKeyboardMarkup(row_width=2)
                keyboard.add(*buttons)

                if dic_img.get(user_id) is not None:

                    text_1 = f'‚úîÔ∏è - –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {list_style[Nomer][1]}'

                    buttons = [
                        types.InlineKeyboardButton('–ü—Ä–∏–º–µ–Ω–∏—Ç—å', callback_data='apply'),
                        types.InlineKeyboardButton('–ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image'),
                        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                        types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
                    ]
                    keyboard = types.InlineKeyboardMarkup(row_width=2)
                    keyboard.add(*buttons)

                    if image_marker[user_id] == 1:

                       image_marker[user_id] = 0
                       bot.send_message(message.chat.id, f'[ ‚ñ†_‚ñ†_‚ñ°_‚ñ°_‚ñ° ] ...–≤—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è...\n'
                                                         f'‚è∞... —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 1 –º–∏–Ω.')

                       output_img = style_apply(dic_img[user_id], dic_style[user_id])

                       buttons = [
                           types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                           types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='cancel'),
                           types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å', callback_data='new_style'),
                           types.InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='new_image')
                       ]
                       keyboard = types.InlineKeyboardMarkup(row_width=2)
                       keyboard.add(*buttons)

                       bot.send_photo(message.chat.id, output_img)
                       bot.send_message(message.chat.id, f'‚ú® –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', reply_markup=keyboard)

                    else:
                        bot.send_message(message.chat.id, f'{text_1}\n–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ?'
                                     , reply_markup=keyboard)
                else:
                    #  –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    name_style = list_style[Nomer][0]
                    dic_style[user_id] = [name_style, random_image(name_style)]

                    text_2 = f'‚úîÔ∏è - –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {list_style[Nomer][1]}'
                    buttons = [
                        types.InlineKeyboardButton('–ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è', callback_data='show_style'),
                        types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info'),
                        types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
                        types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
                    ]
                    keyboard = types.InlineKeyboardMarkup(row_width=2)
                    keyboard.add(*buttons)
                    bot.send_message(message.chat.id, f'{text_2}\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',  reply_markup=keyboard)
            else:
                bot.send_message(message.chat.id, f'üö´ {Nomer} - —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≤ c–ø–∏—Å–∫–µ –Ω–µ—Ç'
                                                  f'üñçÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è:\n {text_style}',
                                 reply_markup=keyboard)
        else:
            text_3 = f'‚ÄºÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞.'
            bot.send_message(message.chat.id, f'{text_3}\n {text_style}', reply_markup=keyboard)


    # --- –°—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
    else:

        style_marker[user_id] = 0
        show_marker[user_id] = 0

        text_3 = ('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.')
        buttons = [
            types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu'),
            types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥', callback_data='info')
        ]
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, text_3, reply_markup=keyboard)

# ----------------------------------

bot.polling(none_stop=True)